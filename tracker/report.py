import os

def letter_grade(score):
    if score >= 85: return "A"
    if score >= 75: return "B"
    if score >= 65: return "C"
    if score >= 50: return "D"
    return "E"

def build_markdown_report(rows):
    """
    Bangun laporan Markdown rekap mahasiswa.
    Kolom rapih, angka rata kanan, teks rata kiri.
    """
    # Urutkan berdasarkan NIM
    rows_sorted = sorted(rows, key=lambda x: x["student_id"])

    lines = []
    lines.append("# REKAP NILAI MAHASISWA\n")
    lines.append("| NIM        | Nama    | Hadir (%) | Nilai Akhir | Predikat |")
    lines.append("|:---------- |:------- |----------:|------------:|:--------:|")

    for r in rows_sorted:
        lines.append(
            f"| {r['student_id']:<10} | {r['name']:<7} | {r['attendance_rate']:>10.1f} | {r['final_score']:>12.2f} | {r['grade']:^8} |"
        )

    lines.append("\nGenerated by student_performance_tracker")
    return "\n".join(lines)


def build_html_report(rows):
    """
    Bangun laporan HTML rekap mahasiswa.
    Judul ditengah, tabel menarik, warna pastel per predikat, header sticky.
    """
    color_map = {
        "A": "#a8e6cf",
        "B": "#dcedc1",
        "C": "#ffd3b6",
        "D": "#ffaaa5",
        "E": "#ff8b94",
    }

    html = [
        "<html><head><meta charset='utf-8'><title>Rekap Nilai Mahasiswa</title>",
        "<style>",
        "body{font-family:Arial, sans-serif;margin:30px;background:#f9f9f9;}",
        "h2{text-align:center; width:100%; display:block; text-transform:uppercase; color:#333; margin-bottom:20px;}",
        "table{border-collapse:collapse;width:80%;margin:auto;box-shadow:0 2px 8px rgba(0,0,0,0.1);}",
        "th,td{border:1px solid #ddd;padding:12px;text-align:center;font-size:14px;}",
        "th{background-color:#f2f2f2;color:#333;letter-spacing:1px;position:sticky;top:0;}",
        "tr:nth-child(even){background-color:#fefefe;}",  # baris genap ringan
        "tr:hover{background-color:#f1f1f1;}",
        "caption{caption-side:top;font-size:18px;font-weight:bold;margin-bottom:10px;}",
        "</style></head><body>",
        "<h2>REKAP NILAI MAHASISWA</h2>",
        "<table>",
        "<tr><th>NIM</th><th>Nama</th><th>Hadir (%)</th><th>Nilai Akhir</th><th>Predikat</th></tr>"
    ]

    for idx, r in enumerate(rows):
        # warna predikat
        color = color_map.get(r['grade'], "#fff")
        # bergantian pastel lembut untuk baris selain predikat
        row_bg = "#f9f9f9" if idx % 2 == 0 else "#ffffff"
        html.append(
            f"<tr style='background:{color};'><td>{r['student_id']}</td><td>{r['name']}</td>"
            f"<td>{r['attendance_rate']:.1f}</td><td>{r['final_score']:.2f}</td>"
            f"<td><b>{r['grade']}</b></td></tr>"
        )

    html.append("</table><p style='text-align:center;margin-top:10px;'>Generated by student_performance_tracker</p></body></html>")
    return "\n".join(html)



def save_text(path, content):
    os.makedirs(os.path.dirname(path), exist_ok=True)
    with open(path, "w", encoding="utf-8") as f:
        f.write(content)
